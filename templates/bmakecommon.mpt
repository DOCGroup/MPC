// -*- MPC -*-

// The *32 settings are for bcc32, *32c are for bcc32c (the clang based bcc32), and *64 are for bcc64 (also clang based)

conditional_include "common"

configurations       = Debug Release
compilers            = bcc32 bcc32c bcc64 bcc64x
common_defines       =
common_libs          = ws2_32$(LIB_EXT)
common32_libs        = import32$(LIB_EXT) cw32mti$(LIB_EXT)
common32c_libs       = import32$(LIB_EXT) cw32mti$(LIB_EXT)
common64_libs        = import64$(LIB_EXT) cw64mti$(LIB_EXT)
common32_flags       = -a8
common32c_flags      = -a8
common64_flags       =
unicode_flags        = -WU
unicode_lib_modifier = u
unicode_exe_modifier = u

obj32_ext = .obj
obj32c_ext = .obj
obj64_ext = .o
dll_ext = .dll
exe_ext = .exe

rc      = brcc32
link32  = ilink32
link64  = ilink64
tlib32  = tlib
tlib64  = tlib64
dllflags = -Tpd -Gi -x -Gn -w-dup
libflags = /C
ccflags  = -q
exeflags = -Tpe -x -Gn

bcc32  {
debug_flags = -v -y -Od -vi- -k
optimize_flags = -O1
warn_flags = -w-rvl -w-rch -w-ccc -w-obs -w-aus -w-pia -w-inl -w-mls
cc = bcc32
binary_flags = -tWR -tWD
lib_ext = .lib
common_defines = WIN32 _WINDOWS
}

bcc32c {
debug_flags = -Od -vi-
optimize_flags = -O3
warn_flags =
cc = bcc32c
binary_flags = -tR -tD
thr_flags = -tWM
lib_ext = .lib
common_defines = WIN32 _WINDOWS
}

bcc64 {
debug_flags = -g -O0
optimize_flags = -O3
warn_flags =
cc = bcc64
binary_flags = -tR -tD
thr_flags = -tM
lib_ext = .a
common_defines = WIN32 _WINDOWS WIN64
}

bcc64x {
debug_flags = -g -O0
optimize_flags = -O3
warn_flags =
cc = bcc64x
binary_flags = -tR -tD
thr_flags = -tM
lib_ext = .a
common_defines = WIN32 _WINDOWS WIN64
}
