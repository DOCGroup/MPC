package CMakeWorkspaceCreator;

# ************************************************************
# Description   : A CMake Workspace creator
# Author        : Chad Elliott
# Create Date   : 10/10/2022
# ************************************************************

# ************************************************************
# Pragmas
# ************************************************************

use strict;
use File::Basename;

use CMakeProjectCreator;
use WorkspaceCreator;

use vars qw(@ISA);
@ISA = qw(WorkspaceCreator);

# ************************************************************
# Data Section
# ************************************************************

my $version = '3.12.0';

# ************************************************************
# Subroutine Section
# ************************************************************

sub workspace_per_project {
  #my $self = shift;
  return 1;
}

sub workspace_file_name {
  return 'CMakeLists.txt';
}

sub pre_workspace {
  my($self, $fh) = @_;
  my $crlf = $self->crlf();

  $self->print_workspace_comment($fh,
           '# CMake Workspace', $crlf,
           '#', $crlf,
           '# This file was generated by MPC.', $crlf,
           '#', $crlf,
           '# MPC Command:', $crlf,
           '# ', $self->create_command_line_string($0, @ARGV), $crlf);
}

sub get_top_directory {
  my($self, $path) = @_;

  ## Get the top level directory in the path.  If the path does not contain
  ## a directory, the path will be returned unmodified.
  my $dir = $path;
  my $done = 0;
  do {
    ## Go up one directory.  If we were already at the top directory,
    ## we're finished.
    my $next = $self->mpc_dirname($dir);
    if ($next eq '.') {
      $done = 1;
    }
    else {
      $dir = $next;
    }
  } while(!$done);

  return $dir;
}

sub write_comps {
  my($self, $fh, $creator) = @_;
  my $status = 1;
  my $errorString = '';
  my @project_dirs;
  my @projects = $self->sort_dependencies($self->get_projects(), 0);

  ## Build a list of top level directories.  We only want to go down one
  ## directory.  The workspace in that directory will handle going to
  ## other subdirectories.
  my %dirs;
  foreach my $entry (@projects) {
    my $dir = $self->get_top_directory($entry);
    if ($dir ne $entry && !exists $dirs{$dir}) {
      ## Keep track of the project existing in this directory
      $dirs{$dir} = 1;

      push(@project_dirs, $dir);
    }
  }

  ## Create the basis of a project so that we can add our add_subdirectory()
  ## calls below it.
  my $crlf = $self->crlf();
  print $fh "cmake_minimum_required(VERSION $version)", $crlf,
            "project(workspace CXX)", $crlf;

  my $first = 1;
  foreach my $dir (@project_dirs) {
    if ($first) {
      $first = undef;
      print $fh $crlf;
    }
    print $fh "add_subdirectory($dir)$crlf";
  }

  $first = 1;
  foreach my $entry (@projects) {
    my $dir = $self->mpc_dirname($entry);
    if ($dir eq '.') {
      if ($first) {
        $first = undef;
        print $fh $crlf;
      }
      print $fh "include($entry)$crlf";
    }
  }

  return $status, $errorString;
}

1;
