# The file ".wrmakefile" is the template used by the Wind River Workbench to
# generate the makefiles of this project. Add user-specific build targets and
# make rules only(!) in this project's ".wrmakefile" file. These will then be
# automatically dumped into the makefiles.

WIND_HOME := $(subst \,/,$(WIND_HOME))
WIND_BASE := $(subst \,/,$(WIND_BASE))
WIND_USR := $(subst \,/,$(WIND_USR))

<%if(exename)%>
ACE_TARGET_PREFIX :=
ACE_TARGET_NAME := <%exename%>
ACE_TARGET_EXT := <%exe_ext%>
<%else%>
<%if(sharedname || staticname)%>
ACE_TARGET_PREFIX := <%lib_prefix%>
ACE_TARGET_NAME := <%if(sharedname)%><%sharedname%><%else%><%staticname%><%endif%>
ACE_TARGET_EXT := <%lib_ext%>
<%endif%>
<%endif%>

<%if(standard_build)%>
all : pre_recursion subdirs_all post_recursion pre_build main_all post_build
<%else%>
all : pre_build main_all post_build
<%endif%>

<%if(!standard_build)%>
_clean ::
	@echo "make: removing targets and objects of `pwd`"
<%endif%>

%IDE_GENERATED%

<%if(!standard_build)%>
-include $(PRJ_ROOT_DIR)/*.makefile
<%endif%>

-include *.makefile

<%if(custom_only)%>
main_all : external_build
	@echo "make: built targets of `pwd`"
<%else%>
<%if(standard_build)%>
main_all : check_objectdir external_build $(PROJECT_TARGETS)
<%else%>
main_all : external_build $(PROJECT_TARGETS)
<%endif%>
        @echo "make: built targets of `pwd`"
<%endif%>

<%if(standard_build)%>
check_objectdir :
	@if [ ! -d "$(OBJ_DIR)" ]; then\
		mkdir -p $(OBJ_DIR);\
	fi

# main entry point for pre processing prior to the recursion
pre_recursion ::
	@echo ""

# main entry point for post processing after the recursion
post_recursion ::
	@echo ""
<%endif%>

# entry point for extending the build
external_build ::
	@echo ""

# main entry point for pre processing prior to the build
pre_build :: $(PRE_BUILD_STEP) generate_sources
	@echo ""

# entry point for generating sources prior to the build
generate_sources ::
<%if(standard_build)%>
<%if(exename)%>
	PROJECT_TARGET=$(filter %<%exe_ext%>,$(PROJECT_TARGETS));\
	if [ "$$PROJECT_TARGET" != "" ]; then\
<%else%>
	PROJECT_TARGET=$(filter  %<%lib_ext%>,$(PROJECT_TARGETS));\
	if [ "$$PROJECT_TARGET" != "" ]; then\
<%endif%>
<%endif%>
<%foreach(custom_types)%>
<%foreach(custom_type->input_files)%>
<%if(custom_type->input_file->output_files)%>
<%if(make_coexistence)%>
	cd ../.. ; <%if(flag_overrides(custom_type->input_file, command))%><%flag_overrides(custom_type->input_file, command)%><%else%><%custom_type->command%><%endif%> <%if(flag_overrides(custom_type->input_file, commandflags))%><%flag_overrides(custom_type->input_file, commandflags)%><%else%><%custom_type->commandflags%><%endif%> <%custom_type->input_file%> <%if(custom_type->output_option)%><%custom_type->output_option%> $@<%endif%>
<%else%>
		<%if(flag_overrides(custom_type->input_file, command))%><%flag_overrides(custom_type->input_file, command)%><%else%><%custom_type->command%><%endif%> <%if(flag_overrides(custom_type->input_file, commandflags))%><%flag_overrides(custom_type->input_file, commandflags)%><%else%><%custom_type->commandflags%><%endif%> <%custom_type->input_file%> <%if(custom_type->output_option)%><%custom_type->output_option%> $@<%endif%><%if(standard_build)%>;\<%endif%>
<%endif%>
<%endif%>
<%endfor%>
<%endfor%>
<%if(standard_build)%>
	fi 
<%endif%>

# main entry point for post processing after the build
post_build :: $(POST_BUILD_STEP) deploy_output
	@echo ""

# entry point for deploying output after the build
deploy_output ::
<%if(!standard_build)%>
<%if(exename)%>
<%if(exeout)%>
	if [ ! -d <%exeout%> ]; then\
		mkdir -p <%exeout%>;\
	fi;\
	if test -e <%exeout%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
		if test $(ACE_TARGET_NAME)/$(MODE_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) -nt <%exeout%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
			cp $(ACE_TARGET_NAME)/$(MODE_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%exeout%>;\
		fi \
	else \
		cp $(ACE_TARGET_NAME)/$(MODE_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%exeout%>;\
	fi 
<%endif%>
<%else%>
<%if(sharedname || staticname)%>
<%if(libout || dllout)%>
	if [ ! -d <%if(dllout)%><%dllout%><%else%><%libout%><%endif%> ]; then\
		mkdir -p <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>;\
	fi;\
	if test -e <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
		if test $(ACE_TARGET_NAME)/$(MODE_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) -nt <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
			cp $(ACE_TARGET_NAME)/$(MODE_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>
		fi \
	else \
		cp $(ACE_TARGET_NAME)/$(MODE_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>
	fi 
<%endif%>
<%endif%>
<%endif%>
<%else%>
<%if(exename)%>
<%if(exeout)%>
	PROJECT_TARGET=$(filter %<%exe_ext%>,$(PROJECT_TARGETS));\
	if [ "$$PROJECT_TARGET" != "" ]; then\
		if [ ! -d <%exeout%> ]; then\
			mkdir -p <%exeout%>;\
		fi;\
		if test -e <%exeout%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
			if test $(OBJ_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) -nt <%exeout%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
				cp $(OBJ_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%exeout%>;\
			fi \
		else \
			cp $(OBJ_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%exeout%>;\
		fi \
	fi 
<%endif%>
<%else%>
<%if(sharedname || staticname)%>
<%if(libout || dllout)%>
	PROJECT_TARGET=$(filter  %<%lib_ext%>,$(PROJECT_TARGETS));\
	if [ "$$PROJECT_TARGET" != "" ]; then\
		if [ ! -d <%if(dllout)%><%dllout%><%else%><%libout%><%endif%> ]; then\
			mkdir -p <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>;\
		fi;\
		if test -e <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
			if test $(OBJ_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) -nt <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT); then \
				cp $(OBJ_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>;\
			fi \
		else \
				cp $(OBJ_DIR)/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT) <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>;\
		fi \
	fi
<%endif%>
<%endif%>
<%endif%>
<%endif%>
	@echo ""

<%if(standard_build)%>
# recursive make in SUBDIRS
subdirs_all :
	@_PWD=`pwd`;\
	for dir in _dummy_ $(SUBDIRS); do\
		if [ "$$dir" = "_dummy_" ]; then\
			continue ;\
	fi;\
		if [ ! -d "$$dir" ]; then\
			continue ;\
	fi;\
	echo "Recursive make: Changing to Directory '$$dir'";\
	cd "$$dir";\
		"$(MAKE)" -f "$(MAKEFILE)" $(MFLAGS) all || exit;\
		echo "Recursive make: Changing back to Directory '$$_PWD'";\
		cd "$$_PWD";\
	done

clean ::
	@_PWD=`pwd`;\
	for dir in _dummy_ $(SUBDIRS); do\
		if [ "$$dir" = "_dummy_" ]; then\
			continue ;\
		fi;\
		if [ ! -d "$$dir" ]; then\
			continue ;\
		fi;\
		echo "Recursive make: Changing to Directory '$$dir'";\
		cd "$$dir";\
		"$(MAKE)" -f "$(MAKEFILE)" $(MFLAGS) $@ || exit;\
		echo "Recursive make: Changing back to Directory '$$_PWD'";\
		cd "$$_PWD";\
	done
<%endif%>

clean :: external_clean $(CLEAN_STEP) _clean

# entry point for extending the build clean
external_clean ::
<%foreach(custom_types)%>
<%foreach(custom_type->input_files)%>
<%if(custom_type->input_file->output_files)%>
	cd ../.. ; rm -f <%foreach(custom_type->input_file->output_files)%> <%if(flag_overrides(custom_type->input_file, gendir))%><%flag_overrides(custom_type->input_file, gendir)%>\<%basename(custom_type->input_file->output_file)%><%else%><%custom_type->input_file->output_file%><%endif%><%endfor%>
<%endif%>
<%endfor%>
<%endfor%>
<%if(exename)%>
<%if(exeout)%>
	PROJECT_TARGET=$(filter  %<%exe_ext%>,$(PROJECT_TARGETS));\
	if [ "$$PROJECT_TARGET" != "" ]; then\
		rm -f <%exeout%>/$(ACE_TARGET_NAME)$(ACE_TARGET_EXT);\
	fi
<%endif%>
<%else%>
<%if(sharedname || staticname)%>
	PROJECT_TARGET=$(filter  %<%lib_ext%>,$(PROJECT_TARGETS));\
	if [ "$$PROJECT_TARGET" != "" ]; then\
		rm -f <%if(dllout)%><%dllout%><%else%><%libout%><%endif%>/$(ACE_TARGET_PREFIX)$(ACE_TARGET_NAME)$(ACE_TARGET_EXT);\
	fi
<%endif%>
<%endif%>
	@echo ""

<%if(standard_build)%>
_clean :
	@echo "make: removing targets and objects of `pwd`";\
	rm -f $(OBJECTS) $(PROJECT_TARGETS) $(DEP_FILES) $(wildcard $(OBJ_DIR)/*.unstripped) $(wildcard $(OBJ_DIR)/ctdt.*)

build_all_specs :
	@echo "building target default for ALL build-specs";\
	for spec in _dummy_ $(ALL_BUILD_SPECS); do\
		if [ "$$spec" = "_dummy_" ]; then\
			continue ;\
		fi;\
		echo " ";\
		echo "building all for build-spec '$$spec'";\
		"$(MAKE)" -f "$(MAKEFILE)" $(MFLAGS) BUILD_SPEC=$$spec DEBUG_MODE=$(DEBUG_MODE) TRACE=$(TRACE) || exit;\
	done

clean_all_specs :
	@echo "building target clean for ALL build-specs";\
	for spec in _dummy_ $(ALL_BUILD_SPECS); do\
		if [ "$$spec" = "_dummy_" ]; then\
			continue ;\
		fi;\
		echo " ";\
		echo "building clean for build-spec '$$spec'";\
		"$(MAKE)" -f "$(MAKEFILE)" $(MFLAGS) BUILD_SPEC=$$spec DEBUG_MODE=$(DEBUG_MODE) TRACE=$(TRACE) clean || exit;\
	done

build_enabled_specs :
	@echo "building target default for ENABLED build-specs";\
	for spec in _dummy_ $(ENABLED_BUILD_SPECS); do\
		if [ "$$spec" = "_dummy_" ]; then\
			continue ;\
		fi;\
		echo " ";\
		echo "building all for build-spec '$$spec'";\
		"$(MAKE)" -f "$(MAKEFILE)" $(MFLAGS) BUILD_SPEC=$$spec DEBUG_MODE=$(DEBUG_MODE) TRACE=$(TRACE) || exit;\
	done

clean_enabled_specs :
	@echo "building target clean for ENABLED build-specs";\
	for spec in _dummy_ $(ENABLED_BUILD_SPECS); do\
		if [ "$$spec" = "_dummy_" ]; then\
			continue ;\
		fi;\
		echo " ";\
		echo "building clean for build-spec '$$spec'";\
		"$(MAKE)" -f "$(MAKEFILE)" $(MFLAGS) BUILD_SPEC=$$spec DEBUG_MODE=$(DEBUG_MODE) TRACE=$(TRACE) clean || exit;\
	done
<%endif%>
